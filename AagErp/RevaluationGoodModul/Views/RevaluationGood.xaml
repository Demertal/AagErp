<UserControl x:Class="RevaluationGoodModul.Views.RevaluationGood"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:interactivity="http://prismlibrary.com/"
             xmlns:local="clr-namespace:RevaluationGoodModul.Views"
             xmlns:models="clr-namespace:ModelModul.Models;assembly=ModelModul"
             xmlns:converters="clr-namespace:RevaluationGoodModul.Converters"
             xmlns:converters1="clr-namespace:ModelModul.Converters;assembly=ModelModul"
             interactivity:ViewModelLocator.AutoWireViewModel="True" VerticalAlignment="Center">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <interactivity:InvokeCommandAction Command="{Binding ListenKeyboardCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>

        <Style TargetType="{x:Type Border}" x:Key="BorderHeader">
            <Setter Property="Background">
                <Setter.Value>
                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                        <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                <TranslateTransform X="0.02" Y="0.3"/>
                            </TransformGroup>
                        </RadialGradientBrush.RelativeTransform>
                        <GradientStop Color="{DynamicResource BorderColor}" Offset="0" />
                        <GradientStop Color="Transparent" Offset="1" />
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Rectangle}" x:Key="RectangleHeader">
            <Setter Property="Width" Value="1"/>
            <Setter Property="StrokeThickness" Value="1"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Stroke">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource BorderColor}"></SolidColorBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Rectangle}" x:Key="RectangleRow" BasedOn="{StaticResource RectangleHeader}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource {x:Type TreeView}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Border Name="Border" CornerRadius="10" BorderThickness="2">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderColor}" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="White"/>
                            </Border.Background>
                            <ScrollViewer Focusable="False" CanContentScroll="False" Padding="4">
                                <Grid IsSharedSizeScope="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="UnitStorageGroup"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="CountGroup"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="PurchasePriceGroup"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="PurchaseCurrencyGroup"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="SalePriceGroup"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="RevaluationPriceGroup"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Style="{StaticResource BorderHeader}" Grid.Column="0">
                                            <Grid>
                                                <TextBlock Text="Наименование" HorizontalAlignment="Center"/>
                                                <Rectangle Style="{StaticResource RectangleHeader}"/>
                                            </Grid>
                                        </Border>
                                        <Border Style="{StaticResource BorderHeader}" Grid.Column="1">
                                            <Grid>
                                                <TextBlock Text="Ед. хр."/>
                                                <Rectangle Style="{StaticResource RectangleHeader}"/>
                                            </Grid>
                                        </Border>
                                        <Border Style="{StaticResource BorderHeader}" Grid.Column="2">
                                            <Grid>
                                                <TextBlock Text="Кол-во"/>
                                                <Rectangle Style="{StaticResource RectangleHeader}"/>
                                            </Grid>
                                        </Border>
                                        <Border Style="{StaticResource BorderHeader}" Grid.Column="3">
                                            <Grid>
                                                <TextBlock Text="Цена закупки"/>
                                                <Rectangle Style="{StaticResource RectangleHeader}"/>
                                            </Grid>
                                        </Border>
                                        <Border Style="{StaticResource BorderHeader}" Grid.Column="4">
                                            <Grid>
                                                <TextBlock Text="Валюта закупки"/>
                                                <Rectangle Style="{StaticResource RectangleHeader}"/>
                                            </Grid>
                                        </Border>
                                        <Border Style="{StaticResource BorderHeader}" Grid.Column="5">
                                            <Grid>
                                                <TextBlock Text="Текущая"/>
                                                <Rectangle Style="{StaticResource RectangleHeader}"/>
                                            </Grid>
                                        </Border>
                                        <Border Style="{StaticResource BorderHeader}" Grid.Column="6">
                                            <TextBlock Text="Переоцененная"/>
                                        </Border>
                                    </Grid>
                                    <Rectangle Style="{StaticResource RectangleHeader}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="Auto" Grid.Row="1" Margin="-2,0"/>
                                    <ScrollViewer Focusable="False" CanContentScroll="False" Padding="4" Grid.Row="2">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ContextMenu x:Key="ProductContextMenu">
            <MenuItem Header="Исключить"  CommandParameter="{Binding}"
                      Command="{Binding Path=DataContext.DeleteProductCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RevaluationGood}}}"/>
        </ContextMenu>
        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="ContextMenu" Value="{StaticResource ProductContextMenu}"/>
        </Style>
        
        <converters:SelectedPurchasePriceConverter x:Key="SelectedPurchasePriceConverter"/>
        <converters:SelectedPurchaseCurrencyConverter x:Key="SelectedPurchaseCurrencyConverter"/>
        <converters1:ConvertCount x:Key="ConvertCount"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <TreeView ItemsSource="{Binding RevaluationPriceProductsList, UpdateSourceTrigger=PropertyChanged}">
            <TreeView.Resources>
                <HierarchicalDataTemplate ItemsSource="{Binding Product.EquivalentCostForExistingProductsCollection, UpdateSourceTrigger=PropertyChanged}" DataType="{x:Type models:PriceProduct}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="UnitStorageGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="CountGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="PurchasePriceGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="PurchaseCurrencyGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="SalePriceGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="RevaluationPriceGroup"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Margin="6,0,0,0">
                            <Rectangle Style="{StaticResource RectangleRow}"/>
                            <TextBlock Text="{Binding Product.Title, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                        <Grid Grid.Column="1" Margin="6,0,0,0">
                            <Rectangle Style="{StaticResource RectangleRow}"/>
                            <ComboBox DisplayMemberPath="Title" SelectedValuePath="Id" SelectedValue="{Binding  Product.IdUnitStorage, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"
                                      ItemsSource="{Binding DataContext.UnitStoragesList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RevaluationGood}}, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                        <Grid Grid.Column="2" Margin="6,0,0,0">
                            <Rectangle Style="{StaticResource RectangleRow}"/>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource ConvertCount}" ValidatesOnExceptions="True" NotifyOnValidationError="True" ValidatesOnNotifyDataErrors="True">
                                        <Binding  Path="Product.Count">
                                            <Binding.ValidationRules>
                                                <ExceptionValidationRule />
                                                <DataErrorValidationRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                        <Binding Path="Product.UnitStorage.IsWeightGoods" Mode="OneWay"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                        <Grid Grid.Column="3" Margin="6,0,0,0">
                            <Rectangle Style="{StaticResource RectangleRow}"/>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource SelectedPurchasePriceConverter}" UpdateSourceTrigger="PropertyChanged" StringFormat="F2">
                                        <MultiBinding.Bindings>
                                            <Binding Path="Product.EquivalentCostForExistingProductsCollection" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="DataContext.CurrenciesList" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:RevaluationGood}}" UpdateSourceTrigger="PropertyChanged"/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                        <Grid Grid.Column="4" Margin="6,0,0,0">
                            <Rectangle Style="{StaticResource RectangleRow}"/>
                            <ComboBox DisplayMemberPath="Title" SelectedValuePath="Id" IsEnabled="False"
                                      ItemsSource="{Binding DataContext.CurrenciesList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RevaluationGood}}, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBox.SelectedValue>
                                    <MultiBinding Converter="{StaticResource SelectedPurchaseCurrencyConverter}" UpdateSourceTrigger="PropertyChanged">
                                        <MultiBinding.Bindings>
                                            <Binding Path="Product.EquivalentCostForExistingProductsCollection" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="DataContext.CurrenciesList" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:RevaluationGood}}" UpdateSourceTrigger="PropertyChanged"/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </ComboBox.SelectedValue>
                            </ComboBox>
                        </Grid>
                        <Grid Grid.Column="5" Margin="6,0,0,0">
                            <Rectangle Style="{StaticResource RectangleRow}"/>
                            <TextBlock Text="{Binding  Product.Price, UpdateSourceTrigger=PropertyChanged, StringFormat=F2}"/>
                        </Grid>
                        <Grid Grid.Column="6" Margin="6,0,0,0">
                            <Rectangle Style="{StaticResource RectangleRow}"/>
                            <TextBlock Text="{Binding Path=Price, UpdateSourceTrigger=PropertyChanged, StringFormat=F2, ValidatesOnDataErrors=True}"/>
                        </Grid>
                    </Grid>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type models:EquivalentCostForExistingProduct}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="UnitStorageGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="CountGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="PurchasePriceGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="PurchaseCurrencyGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="SalePriceGroup"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="RevaluationPriceGroup"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Margin="10,0,0,0"/>
                        <Grid Grid.Column="1" Margin="10,0,0,0"/>
                        <Grid Grid.Column="2" Margin="10,0,0,0">
                            <Rectangle Style="{StaticResource RectangleRow}"/>
                            <TextBlock Text="{Binding Count, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                        <Grid Grid.Column="3" Margin="10,0,0,0">
                            <Rectangle Style="{StaticResource RectangleRow}"/>
                            <TextBlock Text="{Binding  EquivalentCost, UpdateSourceTrigger=PropertyChanged, StringFormat=F2}"/>
                        </Grid>
                        <Grid Grid.Column="4" Margin="10,0,0,0">
                            <Rectangle Style="{StaticResource RectangleRow}"/>
                            <ComboBox DisplayMemberPath="Title" SelectedValuePath="Id" SelectedValue="{Binding  EquivalentCurrencyId, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"
                                      ItemsSource="{Binding DataContext.CurrenciesList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:RevaluationGood}}, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                        <Grid Grid.Column="5" Margin="10,0,0,0">
                            <Rectangle Style="{StaticResource RectangleRow}"/>
                        </Grid>
                        <Grid Grid.Column="6"/>
                    </Grid>
                </DataTemplate>
            </TreeView.Resources>
        </TreeView>
        <DockPanel VerticalAlignment="Center" Grid.Row="1">
            <Button Content="Добавить товар" Command="{Binding AddProductCommand}"/>
            <Button Content="Провести" Command="{Binding PostCommand}" Width="80" DockPanel.Dock="Right" HorizontalAlignment="Right"/>
        </DockPanel>
    </Grid>
</UserControl>















