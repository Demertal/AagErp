<UserControl x:Class="ProductModul.Views.Catalog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:customcontrollibrary="clr-namespace:CustomControlLibrary;assembly=CustomControlLibrary"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:local="clr-namespace:ProductModul.Views"
             xmlns:converters="clr-namespace:ModelModul.Converters;assembly=ModelModul"
             xmlns:views="clr-namespace:CategoryModul.Views;assembly=CategoryModul"
             xmlns:customControl="clr-namespace:CustomControlLibrary.CustomControl;assembly=CustomControlLibrary"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" VerticalContentAlignment="Top" Padding="10,5,5,10">

    <UserControl.Resources>
        <converters:ConvertCount x:Key="ConvertCount"/>
        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
            <Setter Property="customcontrollibrary:MouseDoubleClickCommandBehavior.Command"
                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SelectedProductCommand}" />
            <Setter Property="customcontrollibrary:MouseDoubleClickCommandBehavior.CommandParameter"
                    Value="{Binding}" />
        </Style>
    </UserControl.Resources>

    <Grid VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <customControl:WatermarkTextBox WatermarkText="Поиск..." Text="{Binding FindString, UpdateSourceTrigger=PropertyChanged}" Margin ="5"
                                               TextWrapping="Wrap" MinWidth="200" VerticalContentAlignment="Center " Grid.Column="0" Grid.Row="0"/>

        <views:ShowCategories SelectedCategory="{Binding DataContext.SelectedCategory, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Catalog}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="1"/>

        <customcontrollibrary:ExtendedDataGrid x:Name="ProductData" ItemsSource="{Binding ProductsList, UpdateSourceTrigger=PropertyChanged}"
                          MinHeight="200" MaxHeight="500" SelectionMode="Single" Grid.Column="1" Grid.Row="1" RowStyle="{StaticResource DataGridRowStyle}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Наименование" Binding="{Binding Title, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="TextAlignment" Value="Left"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Артикул" Binding="{Binding VendorCode, UpdateSourceTrigger=PropertyChanged}" MaxWidth="200" IsReadOnly="True" Width="Auto"
                                        ElementStyle="{StaticResource {x:Type TextBlock}}"  Visibility="Collapsed"/>
                <DataGridTextColumn Header="Штрихкод" Binding="{Binding Barcode, UpdateSourceTrigger=PropertyChanged}" MaxWidth="200"  IsReadOnly="True" Width="Auto"
                                        ElementStyle="{StaticResource {x:Type TextBlock}}" Visibility="Collapsed"/>
                <DataGridComboBoxColumn Header="Ед. хр." DisplayMemberPath="Title" CanUserResize="False" SelectedValuePath="Id" IsReadOnly="True" Width="Auto"
                                                 SelectedValueBinding="{Binding IdUnitStorage, RelativeSource={RelativeSource PreviousData}}">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding DataContext.UnitStoragesList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Catalog}}}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                </DataGridComboBoxColumn>
                <DataGridComboBoxColumn Header="Гарантия" DisplayMemberPath="Period" CanUserResize="False" SelectedValuePath="Id" Width="Auto"
                                                SelectedValueBinding="{Binding IdWarrantyPeriod, RelativeSource={RelativeSource PreviousData}}" IsReadOnly="True">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding DataContext.WarrantyPeriodsList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Catalog}}}" />
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                </DataGridComboBoxColumn>
                <DataGridTextColumn Header="Цена" Binding="{Binding Price, StringFormat=F2, UpdateSourceTrigger=PropertyChanged}"  IsReadOnly="True" Width="Auto" MinWidth="40"
                                        ElementStyle="{StaticResource {x:Type TextBlock}}"/>
                <DataGridTextColumn Header="Остаток" IsReadOnly="True" MinWidth="50" Width="Auto"
                                        ElementStyle="{StaticResource {x:Type TextBlock}}">
                    <DataGridTextColumn.Binding>
                        <MultiBinding UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource ConvertCount}" ValidatesOnExceptions="False">
                            <Binding  Path="Count" Mode="OneWay" ValidatesOnExceptions="False" ValidatesOnDataErrors="False"/>
                            <Binding Path="UnitStorage.IsWeightGoods" Mode="OneWay"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </customcontrollibrary:ExtendedDataGrid>
        
        <Button Content="Сбросить фильтр" Grid.Row="0" Grid.Column="2" Command="{Binding ResetCommand}" />

        <DataGrid ItemsSource="{Binding Path=PropertyProductsList, UpdateSourceTrigger=PropertyChanged}" MaxWidth="300" MinWidth="100"
                  IsSynchronizedWithCurrentItem="True" MaxHeight="310"  SelectionMode="Single" HeadersVisibility="None" GridLinesVisibility="None" Grid.Row="1" Grid.Column="2">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Параметр"  Binding="{Binding Path=PropertyName.Title, UpdateSourceTrigger=PropertyChanged}" ElementStyle="{StaticResource {x:Type TextBlock}}" IsReadOnly="True"/>
                <DataGridComboBoxColumn Header="Значение" SelectedValuePath="Id" DisplayMemberPath="Value" SelectedValueBinding="{Binding Path=IdPropertyValue, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Setter Property="ItemsSource" Value="{Binding Path=PropertyName.PropertyValuesCollection, UpdateSourceTrigger=PropertyChanged}"/>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="ItemsSource" Value="{Binding Path=PropertyName.PropertyValuesCollection, UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                </DataGridComboBoxColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>