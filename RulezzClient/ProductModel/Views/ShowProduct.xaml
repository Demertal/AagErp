<UserControl  x:Class="ProductModul.Views.ShowProduct"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:customcontrollibrary="clr-namespace:CustomControlLibrary;assembly=CustomControlLibrary"
             xmlns:interactivity="http://prismlibrary.com/"
             xmlns:modelModul="clr-namespace:ModelModul;assembly=ModelModul"
             xmlns:views="clr-namespace:GroupModul.Views;assembly=GroupModul"
             xmlns:views1="clr-namespace:PropertiesModul.Views;assembly=PropertiesModul"
             xmlns:views2="clr-namespace:ProductModul.Views"
             xmlns:converters="clr-namespace:CustomControlLibrary.Converters;assembly=CustomControlLibrary"
             interactivity:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             VerticalAlignment="Top" VerticalContentAlignment="Top" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Padding="10,5,5,10">

    <UserControl.Resources>
        <converters:VisibilityConverterForBool x:Key="VisibilityConverterForBool"/>

        <ContextMenu x:Key="DataGridMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                     Visibility="{Binding Converter={StaticResource VisibilityConverterForBool}, Path=IsAddPurchase, ConverterParameter=True}">
            <MenuItem Header="Добавить товар"
                      Command="{Binding Path=AddProductCommand}">
                <i:Interaction.Triggers>
                    <interactivity:InteractionRequestTrigger SourceObject="{Binding Path=AddProductPopupRequest}">
                        <interactivity:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True" WindowStyle="{DynamicResource MyWindowStyle}">
                            <interactivity:PopupWindowAction.WindowContent>
                                <views2:AddProduct/>
                            </interactivity:PopupWindowAction.WindowContent>
                        </interactivity:PopupWindowAction>
                    </interactivity:InteractionRequestTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
        </ContextMenu>

        <ContextMenu  x:Key="RowMenu" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                      Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Converter={StaticResource VisibilityConverterForBool}, ConverterParameter=True, Path=DataContext.IsAddPurchase}">
            <MenuItem Header="Удалить" CommandParameter="{Binding}"
                      Command="{Binding DataContext.DeleteProductCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"/>
            <MenuItem Header="Добавить товар"
                      Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.AddProductCommand}">
                <i:Interaction.Triggers>
                    <interactivity:InteractionRequestTrigger SourceObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.AddProductPopupRequest}">
                        <interactivity:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True" WindowStyle="{DynamicResource MyWindowStyle}">
                            <interactivity:PopupWindowAction.WindowContent>
                                <views2:AddProduct/>
                            </interactivity:PopupWindowAction.WindowContent>
                        </interactivity:PopupWindowAction>
                    </interactivity:InteractionRequestTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="TreeViewContex" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                     Visibility="{Binding Converter={StaticResource VisibilityConverterForBool}, ConverterParameter=True, Path=IsAddPurchase}">
            <MenuItem Header="Добавить магазин" Command="{Binding Path=AddStoreCommand}">
                <i:Interaction.Triggers>
                    <interactivity:InteractionRequestTrigger SourceObject="{Binding Path=AddStorePopupRequest}">
                        <interactivity:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True" WindowStyle="{DynamicResource MyWindowStyle}">
                            <interactivity:PopupWindowAction.WindowContent>
                                <views:AddGroup/>
                            </interactivity:PopupWindowAction.WindowContent>
                        </interactivity:PopupWindowAction>
                    </interactivity:InteractionRequestTrigger>
                </i:Interaction.Triggers>
            </MenuItem>
        </ContextMenu>

        <Style x:Key="DefaultRowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
        </Style>
    </UserControl.Resources>

    <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top">
        <customcontrollibrary:WatermarkTextBox WatermarkText="Поиск..." Text="{Binding FindString,  UpdateSourceTrigger=PropertyChanged}" Margin ="5" Padding="0,0,5,0" HorizontalAlignment="Left"
                                               Height="23" TextWrapping="Wrap" VerticalAlignment="Center" MinWidth="200" VerticalContentAlignment="Center" FontSize="14"/>
        <Grid Margin="0,5,0,0" MaxWidth="2000">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <customcontrollibrary:ExtendedTreeView ItemsSource="{Binding GroupsList, UpdateSourceTrigger=PropertyChanged}" MinWidth="100" ContextMenu="{StaticResource TreeViewContex}" FontSize="14">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding Path=SelectedGroupCommand}"
                                               CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType=customcontrollibrary:ExtendedTreeView}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <customcontrollibrary:ExtendedTreeView.Resources>
                    <customcontrollibrary:BindingProxy x:Key="GroupCommandProxy" Data="{Binding}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=customcontrollibrary:ExtendedTreeView}, Path=SelectedItem}" />
                    <ContextMenu DataContext="{Binding Source={StaticResource GroupCommandProxy}, Path = Data}" x:Key="TreeViewContextNode"
                                 Visibility="{Binding Converter={StaticResource VisibilityConverterForBool}, ConverterParameter=True, Path=IsAddPurchase}">
                        <MenuItem Header="Переименовать группу" Command="{Binding Path=RenameGroupCommand}" CommandParameter="{Binding Source={StaticResource GroupCommandProxy}, Path=CommandParameter}">
                            <i:Interaction.Triggers>
                                <interactivity:InteractionRequestTrigger SourceObject="{Binding Path=RenameGroupPopupRequest}">
                                    <interactivity:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True" WindowStyle="{DynamicResource MyWindowStyle}">
                                        <interactivity:PopupWindowAction.WindowContent>
                                            <views:RenameGroup/>
                                        </interactivity:PopupWindowAction.WindowContent>
                                    </interactivity:PopupWindowAction>
                                </interactivity:InteractionRequestTrigger>
                            </i:Interaction.Triggers>
                        </MenuItem>
                        <MenuItem Header="Добавить группу" Command="{Binding Path=AddGroupCommand}" CommandParameter="{Binding Source={StaticResource GroupCommandProxy}, Path=CommandParameter}">
                            <i:Interaction.Triggers>
                                <interactivity:InteractionRequestTrigger SourceObject="{Binding Path=AddGroupPopupRequest}">
                                    <interactivity:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True" WindowStyle="{DynamicResource MyWindowStyle}">
                                        <interactivity:PopupWindowAction.WindowContent>
                                            <views:AddGroup/>
                                        </interactivity:PopupWindowAction.WindowContent>
                                    </interactivity:PopupWindowAction>
                                </interactivity:InteractionRequestTrigger>
                            </i:Interaction.Triggers>
                        </MenuItem>
                        <MenuItem Header="Просмотреть свойства" Command="{Binding Path=ShowPropertiesCommand}" CommandParameter="{Binding Source={StaticResource GroupCommandProxy}, Path=CommandParameter}">
                            <i:Interaction.Triggers>
                                <interactivity:InteractionRequestTrigger SourceObject="{Binding Path=ShowPropertiesPopupRequest}">
                                    <interactivity:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True" WindowStyle="{DynamicResource MyWindowStyle}">
                                        <interactivity:PopupWindowAction.WindowContent>
                                            <views1:ShowProperties/>
                                        </interactivity:PopupWindowAction.WindowContent>
                                    </interactivity:PopupWindowAction>
                                </interactivity:InteractionRequestTrigger>
                            </i:Interaction.Triggers>
                        </MenuItem>
                        <MenuItem Header="Удалить" Command="{Binding Path=DeleteGroupCommand}" CommandParameter="{Binding Source={StaticResource GroupCommandProxy}, Path=CommandParameter}"/>
                    </ContextMenu>
                </customcontrollibrary:ExtendedTreeView.Resources>
                <customcontrollibrary:ExtendedTreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Path=Groups1}" DataType="{x:Type modelModul:Groups}" >
                        <TextBlock Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}" ContextMenu="{StaticResource TreeViewContextNode}"/>
                    </HierarchicalDataTemplate>
                </customcontrollibrary:ExtendedTreeView.ItemTemplate>
            </customcontrollibrary:ExtendedTreeView>
            <GridSplitter Grid.Column="1" ShowsPreview="False" Width="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="Black" />
            <ScrollViewer Grid.Column="2" HorizontalContentAlignment="Stretch" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" MinHeight="200" MaxHeight="800">
                <customcontrollibrary:ExtendedDataGrid x:Name="ProductData" ItemsSource="{Binding Path=ProductsList, UpdateSourceTrigger=PropertyChanged}" MaxWidth="800"
                    IsSynchronizedWithCurrentItem="True" CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="False"
                    CanUserReorderColumns="False" AutoGenerateColumns="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center"
                    MinHeight="200" MaxHeight="500" RowStyle="{StaticResource DefaultRowStyle}" SelectionMode="Single" Background="White" ContextMenu="{StaticResource DataGridMenu}" FontSize="14">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <interactivity:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.AddCommandPurchaseGoods}" CommandParameter="{Binding ElementName=ProductData, Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <customcontrollibrary:ExtendedDataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        </Style>
                    </customcontrollibrary:ExtendedDataGrid.CellStyle>
                    <customcontrollibrary:ExtendedDataGrid.Columns>
                        <DataGridTemplateColumn Header="Наименование">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox  Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}" MaxWidth="200" TextWrapping="Wrap"  IsReadOnly="True"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Артикул"          Binding="{Binding Path=VendorCode, UpdateSourceTrigger=PropertyChanged}" MaxWidth="200"  IsReadOnly="True"/>
                        <DataGridTextColumn Header="Штрихкод"         Binding="{Binding Path=Barcode, UpdateSourceTrigger=PropertyChanged}" MaxWidth="200"  IsReadOnly="True" Visibility="Collapsed"/>
                        <DataGridTemplateColumn Header="Ед. хр." CanUserResize="False" Visibility="Collapsed">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource = {RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.UnitStoragesList}"
                                              SelectedValuePath="Id" SelectedValue="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},
                                        Path=Item.IdUnitStorage, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Title" IsEnabled="False"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Гарантия" CanUserResize="False" Visibility="Collapsed">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding RelativeSource = {RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.WarrantyPeriodsList}"
                                              SelectedValuePath="Id" SelectedValue="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}},
                                            Path=Item.IdWarrantyPeriod, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Period" IsEnabled="False"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Цена"             Binding="{Binding Path=SalesPrice, UpdateSourceTrigger=PropertyChanged, StringFormat=C, ConverterCulture='ua-UA'}"  IsReadOnly="True"/>
                        <DataGridTextColumn Header="Остаток"     Binding="{Binding Path=Count, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" CanUserResize="False"/>
                    </customcontrollibrary:ExtendedDataGrid.Columns>
                </customcontrollibrary:ExtendedDataGrid>
            </ScrollViewer>
            <GridSplitter Grid.Column="3" ShowsPreview="False" Width="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="Black" />
            <ScrollViewer Grid.Column="4" HorizontalContentAlignment="Stretch" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" MinHeight="200" MaxHeight="500">
                <ContentControl interactivity:RegionManager.RegionName="ProductInfo" interactivity:RegionManager.RegionContext="{Binding SelectedItem, ElementName=ProductData}"/>
            </ScrollViewer>
        </Grid>
    </StackPanel>
</UserControl>