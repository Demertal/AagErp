//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Infrastructure;

namespace ModelModul
{
    public partial class AutomationAccountingGoodsEntities : DbContext
    {
        protected AutomationAccountingGoodsEntities()
            : base("name=AutomationAccountingGoodsEntities")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Counterparties> Counterparties { get; set; }
        public virtual DbSet<ExchangeRates> ExchangeRates { get; set; }
        public virtual DbSet<Groups> Groups { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<PropertyNames> PropertyNames { get; set; }
        public virtual DbSet<PropertyProducts> PropertyProducts { get; set; }
        public virtual DbSet<PropertyValues> PropertyValues { get; set; }
        public virtual DbSet<PurchaseInfos> PurchaseInfos { get; set; }
        public virtual DbSet<PurchaseReports> PurchaseReports { get; set; }
        public virtual DbSet<RevaluationProductsInfos> RevaluationProductsInfos { get; set; }
        public virtual DbSet<RevaluationProductsReports> RevaluationProductsReports { get; set; }
        public virtual DbSet<SalesInfos> SalesInfos { get; set; }
        public virtual DbSet<SalesReports> SalesReports { get; set; }
        public virtual DbSet<SerialNumbers> SerialNumbers { get; set; }
        public virtual DbSet<Stores> Stores { get; set; }
        public virtual DbSet<UnitStorages> UnitStorages { get; set; }
        public virtual DbSet<Warranties> Warranties { get; set; }
        public virtual DbSet<WarrantyPeriods> WarrantyPeriods { get; set; }
        public virtual DbSet<CountProducts> CountProducts { get; set; }
    
        public virtual int GoodsIssued(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GoodsIssued", idParameter);
        }
    
        public virtual int GoodsShipped(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GoodsShipped", idParameter);
        }
    }
}
